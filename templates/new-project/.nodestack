# if you want to use linked containers with docker you need to set them up in the "links" section
# the format is always SERVICE=CONTAINERNAME:INTERNALURL
# SERVICE must be one of the following: mysql, rabbitmq, redis, mongo
# CONTAINERNAME is the running docker container name
# INTERNALURL will be available inside node server container for given SERVICE
# below all SERVICES with sample values
[links]
# this will make MySQL available on URL mysql.ccl inside node server container
mysql=mysql:mysql.ccl

# this will make RabbitMQ available on URL rabbitmq.ccl inside node server container
rabbitmq=rabbitmq1:rabbitmq.ccl

# this will make REDIS available on URL redis.ccl inside node server container
redis=redis:redis.ccl

# this will make MongoDB available on URL mongo.ccl inside node server container
mongo=mongo:mongo.ccl

[project]
# this field is used for generating path in NGINX proxy
name="Project name"

# "components" section specifies which components will be installed (NPM) and setup when using `nodestack init-project` command
# format is always name=0|1, or you can comment a line out, which has the same effect as setting it to 0
[components]
# this will include a sample consumer.coffee file in the project
rabbitmq_consumer=1

# this will include `knode-mailer` npm module
mailer=1

# this will include `knode-mongo` npm module
mongo=1

# this will include `knode-mysql` npm module
mysql=1

# this will include `knode-rabbitmq` npm module
rabbitmq=1

# this will include `knode-redis` npm module
redis=1

# this will include `knode-request` npm module
request=1

# this will include `knode-shell` npm module
shell=1

# "swagger" section defines values for generating documentation
[swagger]
# versioned swagger file name
source_file=swagger.json

# folder where documentation will be generated (you don't need to edit this)
doc_folder=doc

# swaggerfile version (you don't need to edit this)
swagger_version=2.0

# swaggerfile project version
info_version=1.0.0

# swaggerfile project name
info_title="Project name"

# swaggerfile project description
info_description="Project desription"

# local API URL used with automated tests and for swagger (you don't need to edit this)
host="http://localhost:8911"

# you don't need to edit this
consumes="application/json"

# you don't need to edit this
produces="application/json"

# deploy variables for remote "dev"
[remote-dev]
# maintainer of node-stack-server should provide you with this
user=REMOTE_USER_NAME

# maintainer of node-stack-server should provide you with this
host=REMOTE_URL

# GIT repository URL in format "git@bitbucket.org:USERNAME/PROJECT.git" (currently only bitbucket is supported)
repository=REPO_URL

# specify which branch should be deployed
branch=BRANCH_NAME

# project name on node-stack-server on this particular remote
project_name=PROJECT_NAME

# run automated tests on deploy - format is tests=0|1, or you can comment a line out, which has the same effect as setting it to 0
tests=1

# generate documentation on deploy - format is doc=0|1, or you can comment a line out, which has the same effect as setting it to 0
doc=1

# setup nginx proxy for documentation and API - format is nginx_proxy=0|1, or you can comment a line out, which has the same effect as setting it to 1
nginx_proxy=1
